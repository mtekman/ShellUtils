#!/usr/bin/expect -f

# If first argument is "override" then password is a hash
#set first_arg [lindex $argv 0]
#if {$first_arg == "override"} { 
	set password "K1tt0n's"
#	set timearg 60
#}

#if {$password == "" }{
#	# grab the password
#	stty -echo
#	send_user -- "Password: "
#	expect_user -re "(.*)\n"
#	send_user "\n"
#	stty echo
#	set password $expect_out(1,string)
#}

# Connect 20 minutes at a time, or at an argument var
# Destination tends to close connection
set timearg [lindex $argv 0]
if { $timearg == "" } { set timearg 20}
set timeout [expr $timearg*60]
set message "You are now logged in for $timearg mins"

spawn ssh -R 1943:localhost:22 zcapdd1@socrates.ucl.ac.uk
send_user "connecting...\n"

#login handles cases:
#   login with keys (no user/pass)
#   user/pass
#   login with keys (first time verification)
expect {
  "> " { }
  "$ " { }
  "assword: " { 
        send "$password\n" 
        expect {
          "% " { send "$message"}
          "$ " { send "$message"}
        }
  }
  "(yes/no)? " { 
        send "yes\n"
        expect {
          "% " { send "$message"}
          "$ " { send "$message"}
          "assword: " { 
             send "$password\n" 
             expect {
               "% " { send "$message"}
               "$ " { send "$message"}
             }
          }
        }
  }
  default {
        send_user "Login failed\n"
        exit
  }
}

expect {
	"%" {}
	timeout { exit }
	eof { exit }
}

exit
