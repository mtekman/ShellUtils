#!/bin/bash

function gcmd {

    dir=$1
    command="$2"
    match="$3"

    back="/./"
    op="find $dir -type f -name \"$match\" | grep -v eski"

    if [ "$match" = ".git" ]; then
	op="find $dir -type d -name \"$match\" | grep -v eski"
#	back="/./"
	echo "DIR SEARCH"
    fi

    echo "dir=$dir"
    echo "command=$command"
    echo "match=$match"

    [ "$command" = "" ] || [ "$dir" = "" ] && echo -e "
\t`basename $0` <dir> \"git-command\" [ \"match id\" ]

Performs a git operation over all gits found off a dir" && return

    base=`pwd`;
    for f in `eval $op`;do 
	f=`dirname $f`/$back/
	cd $f;
	
	echo -e "\n--> `readlink -f $f`:" \
            && $command
	
	cd $base;
    done

    echo "FINIT!"
}




function gbatch {

    comm=$1
    [ "$comm" = "" ] && echo -e "gbatch 'command' [main]\nwhere main == .essential" && return -1
    [ "$2" = "main" ] && match=".essential" || match=".git"

    getDir SHELL_UTILS

    $SHELL_UTILS/dev/updateFromSamePrivateRepoHost.expect\
	$SHELL_UTILS/network/\
	`readlink -f $SHELL_UTILS/../../`\
	$SHELL_UTILS/dev/git_command.source\
	$match\
	"$comm"
    
}


alias gpall="gbatch \"git pull\""
alias gstall="gbatch \"git status\""


# ensures that this can be called as a .sh scripts
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && echo "[Direct Exec]" && gcmd $1 "$2" "$3"
