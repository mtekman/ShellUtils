#!/bin/bash
#
#  Git update scripts
#

# Sets temp varaiables that only exist for the same bash session

#alias git="git --ignore-submodules=dirty"
alias gpu="git push -u"
alias gpull="git pull"

alias gcomm="git commit -m"
alias gpuom="gpu origin master"


# gcmd is sourced already at this point

function git-watch {
    watch_file=$HOME/.config/repos.watch
    
    [ $# != 1 ] && echo -e "\n\t`basename $0` <repo dir> \n\n Adds a repo to watch to $watch_file, which overrides the shutdown command when unstaged changes are detected." && return

    # touch file
    mkdir -p $(dirname $watch_file)
    touch $watch_file

    repo=$(readlink -f $1)
    ! [ -e $repo/.git ] && echo "Could not find a git folder for $repo" && return

    [ "`grep \"$repo\" $watch_file`" != "" ] && echo "$repo already exists" && return

    echo "$repo" >> $watch_file
    echo "Added $repo to $watch_file"
}


function git-author {
	[ $# != 2 ] && echo -e "\n\tgit-author <new_author> <new_email>\n\n changes the author of all previous commits" && return

	name=$1
	email=$2

	comm1="\
git filter-branch -f --env-filter '
CORRECT_NAME=\"$name\"
CORRECT_EMAIL=\"$email\"
"
	comm2="\
export GIT_COMMITTER_NAME=\"\$CORRECT_NAME\"
export GIT_COMMITTER_EMAIL=\"\$CORRECT_EMAIL\"

export GIT_AUTHOR_NAME=\"\$CORRECT_NAME\"
export GIT_AUTHOR_EMAIL=\"\$CORRECT_EMAIL\"
' --tag-name-filter cat -- --branches --tags\
"
	eval "$comm1$comm2"
}


function sync_repos {
    repo_dir=$HOME/.config/repos.watch
    echo $repo_dir

    if ! [ -e $repo_dir ]; then
	echo "No repos set in $repo_dir... continuing." 2>&1
	return -1
    fi

    unsynced_repos=""
    for repo in $(cat $repo_dir); do
        echo $repo
	cd $repo 2>&1 >/dev/null
        git pull
	out=$(git status -s)
	cd - 2>&1 >/dev/null
	
	[ "$out" != "" ] && unsynced_repos=$unsynced_repos"\n$repo"	
    done

    # warning message
    if [ "$unsynced_repos" != "" ]; then
	echo "The following repos have uncommited changes:" 2>&1
	echo -e "$unsynced_repos" 2>&1
	return -1
    fi

    return 0
}


function shutdown {
    sync_repos
    
    [ $? = 0 ] && /usr/bin/shutdown $*
}
