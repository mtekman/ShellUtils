#!/bin/bash
socrates="zcapdd1@socrates.ucl.ac.uk"
pythagoras="rfh@localhost"

socratInit() {
        [ $# != 1 ] && echo "Initiates a reverse SSH session using socrates.ucl.ac.uk as proxy for the current user and a given port

	usage: socratInit <PORT>
	" && return

	port=$1
	while :; do
		echo "Connected @ `date`" >> /tmp/socrates.log

		# By default the login is set 30 mins
		$git_loc/bash_global/network/login_socrates_local.expect 30 $port

		echo -en "\rReconnect?[y]"
		read -n 1 -t 3 answer
		[ "$answer" = "n" ] && break
	done
	echo -en "\rTERMINATED     \n"
}



socratConnect() {
	[ $# -lt 2 ] && echo "Connects to a reverse ssh session previosly initiated by a remote user rfh for a given port.
	usage: socratssh <port> <saltword> \"[extra commands]\"
" && return

	port=$1
	salt=$2
	commands=$3
	
	[ "$commands" = "" ] && commands="screen -r rme;[ \$? = 1 ] && screen -S rme"
	
	# expect <proxy_host> <proxy_pass> <remote_host> <remote_pass> <port> "[extra commands]"
		
	socrat_pass=$( $git_loc/bash_global/extra/passwords.sh retrieve $socrates $salt )
	pythag_pass=$( $git_loc/bash_global/extra/passwords.sh retrieve $pythagoras $salt )

	# NOTE: sending passes over bash is NOT secure, can definitely be seen in `ps` -- this must all be done in expect
	expect -f $git_loc/bash_global/network/login_socrates_remote.expect $socrates $socrat_pass $pythagoras $pythag_pass $port "$commands"
}
