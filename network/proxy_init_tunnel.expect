#!/usr/bin/expect -f

source salt.expect

set proxy_host [lindex $argv 0]
set timearg [lindex $argv 1]
set portarg [lindex $argv 2]

set salt [getsalt "salt: "]
set proxy_pass [getpass $proxy_host $salt]

set timeout [expr $timearg*60]

set count_loop 0

proc init_connect { loop_number } {

	uplevel #0 spawn ssh -R $::portarg:localhost:22 $::proxy_host
	set message "You are now logged in for $::timearg mins on port $::portarg \[$loop_number\]"
	
	send_user "connecting...\n"

	#login handles cases:
	#   login with keys (no user/pass)
	#   user/pass
	#   login with keys (first time verification)
	expect {
		"> " { }
		"$ " { }
		"assword: " { 
			send "$::proxy_pass\n" 
			expect {
				"% " { send "$message"}
				"$ " { send "$message"}
			}
		}
		"(yes/no)? " { 
			send "yes\n"
			expect {
			  "% " { send "$message"}
			  "$ " { send "$message"}
			  "assword: " { 
					send "$::proxy_pass\n" 
					expect {
						"% " { send "$message"}
						"$ " { send "$message"}
					}
				}
			}
		}
		send_user "Login failed\n"
		exit
	}
}

init_connect $count_loop

expect {
	"%" {}
	timeout {
		set count_loop [expr {$count_loop + 1}]
		init_connect $count_loop
	}
	eof {}
}


