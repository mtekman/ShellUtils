#!/bin/bash

function gifRegions(){
	movie_file=$1
	time_file=$2 		# file with list of time sequences wanted from the movie
	out_fold=$3  		# where to place gifs
	raw_fold=$out_fold/raw	# where to store extracted imgs

	mkdir -p $raw_fold

	counter=0
	while read line; do
		counter=$(( $counter + 1 ))

		time1=$(echo $line | awk -F"-" '{print $1}')
		time2=$(echo $line | awk -F"-" '{print $2}')
		
		[ "$time1" = "" ] && continue;
		[ "$time2" = "" ] && continue;

		diff=$(echo "$time2 - time$1" | bc )

		prefixed=$raw_fold/$counter
		mov2img $movie_fold $prefixed $time1 $diff
	done	
}


function mov2img(){
	mov=$1
	outfix=$2

	dirout=$(dirname $outfix)
	mkdir -p $dirout

	seek="-ss $3"
	duration="-t $4"

	ffmpeg $seek $duration -i $mov "$outfix%05d.png"
}


function converter(){
	inp_prefix=$1
	outfile=$2
	delay="-delay 1x"$3

	convert -coalesce -layers OptimizeTransparency $delay "$inp_prefix*.png" $outfile

}

# Makes a syslinux compatible boot splash image
function makeSplash(){
	[ $# -lt 1 ] && echo "makeSplash <input> [ widthxheight ] [--squish]" && return
	inp=$1
	rez=$2
	squish=$3
	# Check second argument just in case no rez is given
	[ "$rez" == "--squish" ] && squish="--squish" && rez=""

	out=splash.jpg
	
#	rez=$(xrandr --current | egrep -o "current [0-9]+ x [0-9]+" | awk -F "current " '{print $2}' | sed 's/ //g')
#	[ "$rez" = "" ] && echo "Could not determine resolution, is xrandr installed?" && return

	# Max allowed resolution is determined purely by the framebuffer
	if [ "$rez" = "" ]; then
		[ "$(which hwinfo; echo $?)" = "1" ] && echo "hwinfo not installed, please set widthxheight in 2nd argument" && return
		echo -n "Determining max framebuffer rez..."
		rez=$(sudo hwinfo --framebuffer | tail -2 | head -1 | egrep -o "[0-9][0-9]+x[0-9][0-9]+")
	fi

	extra_chars="!"															# Force scale
	[ "$squish" = "" ] && extra_chars="^ -gravity center -crop $rez+0+0 "		# Keep aspect + crop

	command="convert -depth 16 -colors 65536 -resize $rez$extra_chars $inp $out"
#	echo $command
	$command

	echo "--> $out @ $rez"	
}
